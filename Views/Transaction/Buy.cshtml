@model Trading_company.ViewModels.IncomingViewModel
@{
    ViewData["Title"] = "Покупка товара";
}

<div class="d-flex justify-content-center">
    <div class="col-12">
        <div class="row m-1 bg-secondary bg-opacity-25">
            <h1 class="d-flex justify-content-center">@ViewData["Title"]</h1>
        </div>
        <div class="row">
            
            
            @*ОФОРМЛЕНИЕ ЗАКАЗА*@
            <div class="col-8">
                <div class="row m-1 bg-secondary bg-opacity-25">
                    <h2 class="d-flex justify-content-center">Оформление заказа</h2>
                </div>
                <form id="transactionForm" asp-controller="Transaction" asp-action="Buy">
                    <div class="row m-1 bg-secondary bg-opacity-25">

                        <b class="bg-secondary bg-opacity-50 required">Выберите контракт</b>
                        <div>
                            <select id="selectContract" style="width:100%;max-width:100%;" oninvalid="this.setCustomValidity('Пожалуйста, выберите контракт')" oninput="setCustomValidity('')" required class="m-1" asp-for="Transaction.contract_id">
                                <option value="">
                                    @{
                                        if (Model.Contracts.Count == 0)
                                        {
                                            <div>Отсутствуют действующие контракты</div>;
                                        }
                                        else
                                        {
                                            <div>Выберите из доступных</div>;
                                        }
                                    }
                                </option>
                                @foreach (var contract in Model.Contracts)
                                {
                                    <option value="@contract.id">Контракт#@contract.id - @contract.contr_fullname#@contract.contr_id</option>
                                }
                            </select>
                        </div>

                        <b class="bg-secondary bg-opacity-50 required">Выберите товар</b>
                        <div>
                            <select id="selectProdID" style="width:100%;max-width:100%;" oninvalid="this.setCustomValidity('Пожалуйста, выберите товар')" oninput="setCustomValidity('')" required class="m-1" asp-for="Transaction.prod_id">
                                <option value="">
                                    @{
                                        if (Model.Products.Count == 0)
                                        {
                                            <div>Отсутствуют товары для продажи</div>;
                                        }
                                        else
                                        {
                                            <div>Выберите из доступных</div>;
                                        }
                                    }
                                </option>
                                @foreach (var product in Model.Products)
                                {
                                    <option value="@product.prod_id">@product.group_name#@product.group_id - @product.prod_name#@product.prod_id</option>
                                }
                            </select>
                        </div>

                        <b class="bg-secondary bg-opacity-50 required">Количество товара</b>
                        <div>
                            <input id="inputQuantity" oninvalid="this.setCustomValidity('Пожалуйста, введите валидное количество товара')" oninput="setCustomValidity('')" required class="w-100 m-1" type="number" min="1" asp-for="Transaction.prod_quantity" />
                        </div>

                        <b class="bg-secondary bg-opacity-50 required">Дата транзакции</b>
                        <div>
                            <input id="inputDate" oninvalid="this.setCustomValidity('Введите желаемую дату транзакции')" oninput="setCustomValidity('')" required class="m-1" type="date" min=@ViewData["Min_Date"] asp-for="Transaction.transaction_date" />
                        </div>


                    </div>
                    <div class="row m-3">
                        <input id="acceptBtn" class="btn bg-success bg-opacity-50" type="button" value="Подтвердить транзакцию" />
                    </div>
                </form>
                <h4 id="Message" class="row m-1 text-light bg-dark" />
            </div>


            @*НАПЕЧАТАТЬ ЧЕК (если нужно)*@
            <div class="col-4">
                <div class="row m-1 bg-secondary bg-opacity-25">
                    <h2 class="d-flex justify-content-center">Чек</h2>
                </div>
                <div class="row m-1">
                    <b id="date_description" class="d-flex justify-content-start m-1 bg-secondaty bg-opacity-50"></b>
                    <table class="table table-bordered border-dark">
                        <tbody>
                            <tr>
                                <th class="col-2 bg-secondary bg-opacity-50">Цена</th>
                                <td class="col-9 bg-secondary bg-opacity-25">
                                    <label id="checkCost" />
                                </td>
                                <td class="col-1 bg-secondary bg-opacity-25">руб.</td>
                            </tr>
                            <tr>
                                <th class="col-2 bg-secondary bg-opacity-50">Налог(НДС)</th>
                                <td class="bg-secondary bg-opacity-25">
                                    <label id="checkTax" />
                                </td>
                                <td class="bg-secondary bg-opacity-25">руб.</td>
                            </tr>
                            <tr>
                                <th class="col-2 bg-secondary bg-opacity-50">Итог</th>
                                <td class="bg-secondary bg-opacity-25">
                                    <label id="checkTotalCost" />
                                </td>
                                <td class="bg-secondary bg-opacity-25">руб.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="row m-3 bg-secondary bg-opacity-25">
                    <input class="btn bg-danger bg-opacity-50" type="button" id="checkBtn" value="Напечатать чек" />
                </div>
                <h4 id="checkError" class="row m-1 text-light bg-dark" />
            </div>
        </div>
    </div>
</div>

<script>
    const hubConnection = new signalR.HubConnectionBuilder().withUrl("/hub").build();

    document.getElementById("acceptBtn").onclick = function () {
        const contract_id = document.getElementById("selectContract");
        const prod_id = document.getElementById("selectProdID");
        const quantity = document.getElementById("inputQuantity");
        const transaction_date = document.getElementById("inputDate");

        if (!contract_id.checkValidity()) {
            contract_id.reportValidity();
            return false;
        }
        if (!prod_id.checkValidity()) {
            prod_id.reportValidity();
            return false;
        }
        if (!quantity.checkValidity()) {
            quantity.reportValidity();
            return false;
        }
        if (!transaction_date.checkValidity()) {
            transaction_date.reportValidity();
            return false;
        }

        hubConnection.invoke("SubmitBuy", prod_id.value, transaction_date.value);
    }

    document.getElementById("checkBtn").onclick = function () {
        const prod_id = document.getElementById("selectProdID");
        const quantity = document.getElementById("inputQuantity");
        const transaction_date = document.getElementById("inputDate");

        if (!prod_id.checkValidity()) {
            prod_id.reportValidity();
            return false;
        }
        if (!quantity.checkValidity()) {
            quantity.reportValidity();
            return false;
        }
        if (!transaction_date.checkValidity()) {
            transaction_date.reportValidity();
            return false;
        }

        hubConnection.invoke("GetCheck", prod_id.value, quantity.value, transaction_date.value);
    }

    hubConnection.on("GiveCheck", function(cost, tax, totalCost, date_description = "") {
        document.getElementById("checkCost").innerHTML = cost;
        document.getElementById("checkTax").innerHTML = tax;
        document.getElementById("checkTotalCost").innerHTML = totalCost;
        document.getElementById("checkError").innerHTML = "";
        document.getElementById("date_description").innerHTML = date_description;
    });

    hubConnection.on("CheckError", function(err) {
        document.getElementById("checkCost").innerHTML = "---";
        document.getElementById("checkTax").innerHTML = "---";
        document.getElementById("checkTotalCost").innerHTML = "---";
        document.getElementById("checkError").innerHTML = err;
    });

    hubConnection.on("Message", function(err) {
        document.getElementById("Message").innerHTML = err;
    });

    hubConnection.on("Submit", function() {
        document.getElementById("transactionForm").submit();
    });

    hubConnection.start()
        .catch(function (err) {
            return console.error(err.toString());
        });
</script>